// <auto-generated />
using System;
using DevLife_Portal.Infrastructure.Database.PostgreSQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DevLife_Portal.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250624081808_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DevLife_Portal.Common.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("text")
                        .HasColumnName("avatar_url");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Experience")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("experience");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("lastname");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Streak")
                        .HasColumnType("integer")
                        .HasColumnName("streak");

                    b.Property<string>("TechnoStack")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("techno_stack");

                    b.Property<int>("TotalPoints")
                        .HasColumnType("integer")
                        .HasColumnName("total_points");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.Property<int>("ZodiacSignId")
                        .HasColumnType("integer")
                        .HasColumnName("zodiac_sign_id");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("ux_users_usernames");

                    b.HasIndex("ZodiacSignId");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("DevLife_Portal.Common.Models.ZodiacSign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DailyTip")
                        .HasColumnType("text")
                        .HasColumnName("daily_tip");

                    b.Property<string>("Emoji")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("emoji");

                    b.Property<int>("EndDay")
                        .HasColumnType("integer")
                        .HasColumnName("end_day");

                    b.Property<int>("EndMonth")
                        .HasColumnType("integer");

                    b.Property<string>("LuckyTechnology")
                        .HasColumnType("text")
                        .HasColumnName("lucky_technology");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("StartDay")
                        .HasColumnType("integer")
                        .HasColumnName("start_day");

                    b.Property<int>("StartMonth")
                        .HasColumnType("integer")
                        .HasColumnName("start_month");

                    b.HasKey("Id")
                        .HasName("pk_zodiac_signs");

                    b.ToTable("zodiac_signs", (string)null);
                });

            modelBuilder.Entity("DevLife_Portal.Common.Models.User", b =>
                {
                    b.HasOne("DevLife_Portal.Common.Models.ZodiacSign", "ZodiacSign")
                        .WithMany("Users")
                        .HasForeignKey("ZodiacSignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_users_zodiac_signs");

                    b.Navigation("ZodiacSign");
                });

            modelBuilder.Entity("DevLife_Portal.Common.Models.ZodiacSign", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
